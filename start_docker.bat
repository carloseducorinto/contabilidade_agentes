@echo off
setlocal enabledelayedexpansion

REM =================================================================
REM SCRIPT DE INICIALIZA√á√ÉO - SISTEMA DE CONTABILIDADE COM AGENTES
REM =================================================================

echo üê≥ Iniciando Sistema de Contabilidade com Agentes via Docker
echo ==============================================================

REM Verificar se Docker est√° rodando
docker info >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker Desktop primeiro.
    pause
    exit /b 1
)

REM Verificar se Docker Compose est√° dispon√≠vel
docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Desktop.
    pause
    exit /b 1
)

REM Verificar se arquivo .env existe
if not exist .env (
    echo ‚ö†Ô∏è  Arquivo .env n√£o encontrado. Criando a partir do exemplo...
    if exist env.example (
        copy env.example .env >nul
        echo ‚úÖ Arquivo .env criado. EDITE o arquivo .env e configure sua OPENAI_API_KEY!
        echo üìù Use: notepad .env ou code .env
        echo.
        echo üîë Configure pelo menos a OPENAI_API_KEY para usar o sistema completo.
        echo.
        pause
    ) else (
        echo ‚ùå Arquivo env.example n√£o encontrado.
        pause
        exit /b 1
    )
)

REM Verificar se OPENAI_API_KEY est√° configurada
findstr /C:"OPENAI_API_KEY=" .env | findstr /V /C:"OPENAI_API_KEY=$" | findstr /V /C:"OPENAI_API_KEY= " >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  OPENAI_API_KEY n√£o parece estar configurada no arquivo .env
    echo üîë Configure sua API Key da OpenAI para usar o sistema completo.
    echo.
    set /p "continue=Continuar mesmo assim? (y/N): "
    if /i not "!continue!"=="y" (
        echo Execu√ß√£o cancelada. Configure a API Key e tente novamente.
        pause
        exit /b 1
    )
)

echo üîß Verificando depend√™ncias...

REM Limpeza completa de containers e redes antigas
echo üßπ Limpando containers e redes antigas...
docker-compose down --volumes --remove-orphans 2>nul
docker network prune -f 2>nul

echo üì¶ Construindo e iniciando containers...

REM Configurar vari√°vel de ambiente para Docker networking
set "BACKEND_URL=http://backend:8000"

REM Perguntar sobre monitoramento
echo.
set /p "monitoring=Incluir monitoramento (Prometheus + Grafana)? (y/N): "
if /i "!monitoring!"=="y" (
    echo üöÄ Iniciando com monitoramento...
    docker-compose --profile monitoring up --build -d
    set "MONITORING=true"
) else (
    echo üöÄ Iniciando aplica√ß√£o principal...
    docker-compose up --build -d
    set "MONITORING=false"
)

REM Verificar se houve erro na inicializa√ß√£o
if errorlevel 1 (
    echo ‚ùå Erro na inicializa√ß√£o dos containers. For√ßando reinicializa√ß√£o limpa...
    docker-compose down --volumes --remove-orphans
    docker network prune -f >nul
    timeout /t 3 /nobreak >nul
    REM Manter a vari√°vel de ambiente definida
    set "BACKEND_URL=http://backend:8000"
    if /i "!monitoring!"=="y" (
        docker-compose --profile monitoring up --build -d
    ) else (
        docker-compose up --build -d
    )
)

echo.
echo ‚è≥ Aguardando containers inicializarem...
timeout /t 20 /nobreak >nul

REM Verificar status dos containers
echo üìä Status dos containers:
docker-compose ps

REM Mostrar redes Docker criadas
echo üåê Redes Docker criadas:
docker network ls | findstr "contabilidade"

echo.
echo üè• Verificando health checks...

timeout /t 15 /nobreak >nul

set "backend_ok=false"
for /l %%i in (1,1,3) do (
    powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8000/health' -UseBasicParsing -TimeoutSec 10; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }" >nul 2>&1
    if not errorlevel 1 (
        set "backend_ok=true"
        goto :backend_check_done
    )
    echo üîÑ Tentativa %%i/3: Aguardando backend...
    timeout /t 10 /nobreak >nul
)
:backend_check_done

if "!backend_ok!"=="true" (
    echo ‚úÖ Backend est√° funcionando
) else (
    echo ‚ö†Ô∏è  Backend ainda n√£o est√° respondendo. Verifique os logs com: docker-compose logs backend
)

REM Aguardar mais tempo para o frontend inicializar
timeout /t 20 /nobreak >nul

set "frontend_ok=false"
for /l %%i in (1,1,5) do (
    powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8501/_stcore/health' -UseBasicParsing -TimeoutSec 10; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }" >nul 2>&1
    if not errorlevel 1 (
        set "frontend_ok=true"
        goto :frontend_check_done
    )
    echo üîÑ Tentativa %%i/5: Aguardando frontend...
    timeout /t 15 /nobreak >nul
)
:frontend_check_done

if "!frontend_ok!"=="true" (
    echo ‚úÖ Frontend est√° funcionando
) else (
    echo ‚ö†Ô∏è  Frontend ainda n√£o est√° respondendo. Verifique os logs com: docker-compose logs frontend
)

echo.
echo üéâ Sistema iniciado com sucesso!
echo ==============================================================

echo üåê Acessos:
echo    Frontend (Streamlit): http://localhost:8501
echo    Backend (FastAPI):    http://localhost:8000
echo    API Docs:             http://localhost:8000/docs

if "!MONITORING!"=="true" (
    echo    Prometheus:           http://localhost:9090
    echo    Grafana:              http://localhost:3000 (admin/admin123)
)

echo.
echo üìã Comandos √∫teis:
echo    Ver logs:             docker-compose logs -f
echo    Parar sistema:        docker-compose down
echo    Reiniciar backend:    docker-compose restart backend
echo    Reiniciar frontend:   docker-compose restart frontend
echo    Status containers:    docker-compose ps
echo    Limpar tudo:          docker-compose down --volumes --remove-orphans
echo.
echo üìö Consulte DOCKER_GUIDE.md para mais informa√ß√µes.
echo.

if "!backend_ok!"=="true" if "!frontend_ok!"=="true" (
    echo ‚ú® Pronto para usar! Acesse http://localhost:8501
    echo.
    set /p "open=Abrir browser automaticamente? (Y/n): "
    if /i not "!open!"=="n" (
        start http://localhost:8501
    )
) else (
    echo ‚ö†Ô∏è  Alguns servi√ßos podem n√£o estar funcionando corretamente.
    echo üí° Dicas de troubleshooting:
    echo    1. Verifique os logs: docker-compose logs
    echo    2. Reinicie os servi√ßos: docker-compose restart
    echo    3. Se persistir, pare tudo e reinicie: docker-compose down ^&^& docker-compose up -d
    echo.
)

pause
